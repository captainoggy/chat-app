{{! template-lint-disable no-down-event-binding }}
{{! template-lint-disable no-invalid-interactive }}

<div class="chat-composer__wrapper">
  {{#if this.shouldRenderMessageDetails}}
    <ChatComposerMessageDetails
      @message={{if
        this.currentMessage.editing
        this.currentMessage
        this.currentMessage.inReplyTo
      }}
      @cancelAction={{this.onCancel}}
    />
  {{/if}}

  <div
    role="region"
    aria-label={{i18n "chat.aria_roles.composer"}}
    class={{concat-class
      "chat-composer"
      (if this.isFocused "is-focused")
      (if this.pane.sending "is-sending")
      (if this.sendEnabled "is-send-enabled" "is-send-disabled")
      (if this.disabled "is-disabled")
    }}
    {{did-update this.didUpdateMessage this.currentMessage}}
    {{did-update this.didUpdateInReplyTo this.currentMessage.inReplyTo}}
    {{did-insert this.setup}}
    {{will-destroy this.teardown}}
    {{will-destroy this.cancelPersistDraft}}
  >
    <div class="chat-composer__outer-container">
      <div class="chat-composer__inner-container">
        <ChatComposerDropdown
          @buttons={{this.dropdownButtons}}
          @isDisabled={{this.disabled}}
          @hasActivePanel={{eq
            this.chatEmojiPickerManager.picker.context
            this.context
          }}
          @onCloseActivePanel={{this.chatEmojiPickerManager.close}}
        />

        <div
          class="chat-composer__input-container"
          {{on "click" this.focusTextarea}}
        >
          <DTextarea
            id={{this.composerId}}
            value={{readonly this.currentMessage.message}}
            type="text"
            class="chat-composer__input"
            disabled={{this.disabled}}
            autocorrect="on"
            autocapitalize="sentences"
            placeholder={{this.placeholder}}
            rows={{1}}
            {{did-insert this.setupTextareaInteractor}}
            {{on "input" this.onInput}}
            {{on "keydown" this.onKeyDown}}
            {{on "focusin" this.onTextareaFocusIn}}
            {{on "focusin" (fn this.computeIsFocused true)}}
            {{on "focusout" (fn this.computeIsFocused false)}}
            {{did-insert this.setupAutocomplete}}
            data-chat-composer-context={{this.context}}
          />
        </div>

        <Chat::Composer::Button
          {{on "click" this.onSend}}
          @icon="paper-plane"
          class="chat-composer__send-btn"
          title={{i18n "chat.composer.send"}}
          disabled={{or this.disabled (not this.sendEnabled)}}
          tabindex={{if this.sendEnabled 0 -1}}
          {{on "focus" (fn this.computeIsFocused true)}}
          {{on "blur" (fn this.computeIsFocused false)}}
        />

        {{#unless this.disabled}}
          <ChatComposerInlineButtons @buttons={{this.inlineButtons}} />
        {{/unless}}
      </div>
    </div>
  </div>

  {{#if this.canAttachUploads}}
    <ChatComposerUploads
      @fileUploadElementId={{this.fileUploadElementId}}
      @onUploadChanged={{this.onUploadChanged}}
      @existingUploads={{this.currentMessage.uploads}}
      @uploadDropZone={{@uploadDropZone}}
      @composerInputEl={{this.textareaInteractor.textarea}}
    />
  {{/if}}

  {{#if this.shouldRenderReplyingIndicator}}
    <div class="chat-replying-indicator-container">
      <ChatReplyingIndicator
        @presenceChannelName={{this.presenceChannelName}}
      />
    </div>
  {{/if}}

  <ChatEmojiPicker
    @context={{this.context}}
    @didSelectEmoji={{this.onSelectEmoji}}
  />
</div>